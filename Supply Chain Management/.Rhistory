library(extrafont)
library(ggplot2)
library(pastecs)
install.packages("pastecs", dependencies = FALSE)
install.packages("corrplot", dependencies = FALSE)
install.packages("ppcor", dependencies = FALSE)
install.packages("factoextra", dependencies = FALSE)
install.packages("psych", dependencies = FALSE)
install.packages("GPArotation", dependencies = FALSE)
install.packages("ape", dependencies = FALSE)
install.packages("plotly", dependencies = FALSE)
library(extrafont)
library(ggplot2)
library(pastecs)
library(corrplot)
library(ppcor)
library(factoextra)
library(psych)
library(GPArotation)
library(Hmisc)
library(dplyr)
library(ape)
library(plotly)
download.file("http://simonsoftware.se/other/xkcd.ttf",
dest="xkcd.ttf", mode="wb")
system("mkdir ~/.fonts")
system("cp xkcd.ttf  ~/.fonts")
font_import(paths = "~/.fonts", pattern="[X/x]kcd")
loadfonts()
#loding main data
wt <- read.table("F:\\ResearchProject\\Client Task\\New folder\\mgpl.csv",sep=',',header=T)
str(wt)
#Spearman Correlation Coefficient among Hydrological Parameters
wt_prmts <- data.frame(wt$N, wt$NI, wt$C, wt$I, wt$VI)
colnames(wt_prmts) <- c("N", "NI","C", "I","VI")
cor_sp = rcorr(as.matrix(wt_prmts), type=c("spearman"))
library(extrafont)
library(ggplot2)
library(pastecs)
library(corrplot)
library(ppcor)
library(factoextra)
library(psych)
library(GPArotation)
library(Hmisc)
library(dplyr)
library(ape)
library(plotly)
cor_sp = rcorr(as.matrix(wt_prmts), type=c("spearman"))
cor_sp_coeff = wt_prmts.cor$r
cor_sp_coeff
library(extrafont)
library(ggplot2)
library(pastecs)
library(corrplot)
library(ppcor)
library(factoextra)
install.packages("ggrepel", dependencies = FALSE)
library(pastecs)
library(corrplot)
library(ppcor)
library(factoextra)
library(psych)
library(GPArotation)
library(Hmisc)
library(dplyr)
library(ape)
library(plotly)
install.packages("lazyeval", dependencies = FALSE)
library(plotly)
download.file("http://simonsoftware.se/other/xkcd.ttf",
dest="xkcd.ttf", mode="wb")
system("mkdir ~/.fonts")
system("cp xkcd.ttf  ~/.fonts")
font_import(paths = "~/.fonts", pattern="[X/x]kcd")
loadfonts()
#loding main data
wt <- read.table("F:\\ResearchProject\\Client Task\\New folder\\mgpl.csv",sep=',',header=T)
str(wt)
#Spearman Correlation Coefficient among Hydrological Parameters
wt_prmts <- data.frame(wt$N, wt$NI, wt$C, wt$I, wt$VI)
colnames(wt_prmts) <- c("N", "NI","C", "I","VI")
cor_sp = rcorr(as.matrix(wt_prmts), type=c("spearman"))
cor_sp_coeff = wt_prmts.cor$r
cor_sp = rcorr(as.matrix(wt_prmts), type=c("spearman"))
cor_sp_coeff = wt_prmts.cor$r
library(extrafont)
library(ggplot2)
library(pastecs)
library(corrplot)
library(ppcor)
library(factoextra)
library(psych)
library(GPArotation)
library(Hmisc)
library(dplyr)
library(ape)
library(plotly)
download.file("http://simonsoftware.se/other/xkcd.ttf",
dest="xkcd.ttf", mode="wb")
system("mkdir ~/.fonts")
system("cp xkcd.ttf  ~/.fonts")
font_import(paths = "~/.fonts", pattern="[X/x]kcd")
loadfonts()
#loding main data
wt <- read.table("F:\\ResearchProject\\Client Task\\New folder\\mgpl.csv",sep=',',header=T)
str(wt)
#Spearman Correlation Coefficient among Hydrological Parameters
wt_prmts <- data.frame(wt$N, wt$NI, wt$C, wt$I, wt$VI)
colnames(wt_prmts) <- c("N", "NI","C", "I","VI")
cor_sp = rcorr(as.matrix(wt_prmts), type=c("spearman"))
cor_sp_coeff = wt_prmts.cor$r
cor_sp_coeff
cor_sp_pval = wt_prmts.cor$P
cor_sp_pval
#plot correlation
cor_sp_plot = cor(wt_prmts, method = c("spearman"))
#plot correlation
cor_sp_plot = cor(wt_prmts, method = c("spearman"))
corrplot(cor_sp_plot)
#partial correlation All together
pcor(wt_prmts, method = c("spearman"))
#plot partial correlation
cor_sp_partial_plot = pcor(wt_prmts, method = c("spearman"))
str(cor_sp_partial_plot)
corrplot(cor_sp_partial_plot$estimate)
#Principal conponents analysis
res.pca <- prcomp(wt_prmts, scale = T, center = T)
fviz_eig(res.pca,main = "Screeplot of the 10 PCs",
addlabels = TRUE,
ylim = c(0, 40))
eigs <- res.pca$sdev^2
eigs
summary(res.pca)
pca.loadings <- res.pca$rotation
pca.loadings
fviz_pca_var(res.pca,
col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE )+
labs(title ="     Variables Factor Map (PCA)", x = "PC1 (36.81%)", y = "PC2 (18.78%)")
fviz_pca_ind(res.pca,
col.ind = "cos2",
pointshape = 21, fill = "#E7B800",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE  ) +
labs(title ="                                   Individuals Factor Map (PCA)", x = "PC1 (36.81%)", y = "PC2 (18.78%)") +
xlim(-5, 5) + ylim (-4, 4)
p <- plot_ly(
type = 'scatterpolar',
fill = "toself",
opacity = 0.8
) %>%
add_trace(
r = c(0.434, 0.434,0.373,-0.229, 0.405, -0.238,-0.105,0.009,-0.204,0.392,-0.063),
theta = c('EC','TDS','pH','K','Na', 'Mg','Ca','Cl','SO4','HCO3', 'NO3'),
name = 'PC1 4.05'
) %>%
add_trace(
r = c(0.175,0.173,-0.005,0.427,-0.029,-0.353,-0.387,0.421,0.020,-0.349,0.427),
theta = c('EC','TDS','pH','K','Na', 'Mg','Ca','Cl','SO4','HCO3', 'NO3'),
name = 'PC2 2.07'
) %>%
add_trace(
r = c(0.239,0.241,-0.232,0.059,0.225,0.433,0.402,0.203,0.460,0.158,0.388),
theta = c('EC','TDS','pH','K','Na', 'Mg','Ca','Cl','SO4','HCO3', 'NO3'),
name = 'PC3 1.70'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(-0.5,0.5)
)
)
)
p
wt_prmts_sta <- data.frame(wt$Ã¯..id, wt$ec, wt$tds, wt$ph, wt$k,
wt$na, wt$mg, wt$ca, wt$cl,
wt$so4, wt$hco3, wt$no3)
fviz_pca_var(res.pca,
col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE )+
labs(title ="     Variables Factor Map (PCA)", x = "PC1 (36.81%)", y = "PC2 (18.78%)")
fviz_pca_ind(res.pca,
col.ind = "cos2",
pointshape = 21, fill = "#E7B800",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE  ) +
labs(title ="                                   Individuals Factor Map (PCA)", x = "PC1 (36.81%)", y = "PC2 (18.78%)") +
xlim(-5, 5) + ylim (-4, 4)
p <- plot_ly(
type = 'scatterpolar',
fill = "toself",
opacity = 0.8
) %>%
add_trace(
r = c(0.434, 0.434,0.373,-0.229, 0.405, -0.238,-0.105,0.009,-0.204,0.392,-0.063),
theta = c('EC','TDS','pH','K','Na', 'Mg','Ca','Cl','SO4','HCO3', 'NO3'),
name = 'PC1 4.05'
) %>%
add_trace(
r = c(0.175,0.173,-0.005,0.427,-0.029,-0.353,-0.387,0.421,0.020,-0.349,0.427),
theta = c('EC','TDS','pH','K','Na', 'Mg','Ca','Cl','SO4','HCO3', 'NO3'),
name = 'PC2 2.07'
) %>%
add_trace(
r = c(0.239,0.241,-0.232,0.059,0.225,0.433,0.402,0.203,0.460,0.158,0.388),
theta = c('EC','TDS','pH','K','Na', 'Mg','Ca','Cl','SO4','HCO3', 'NO3'),
name = 'PC3 1.70'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(-0.5,0.5)
)
)
)
cor_sp = rcorr(as.matrix(wt_prmts), type=c("spearman"))
cor_sp_coeff = wt_prmts.cor$r
fviz_nbclust(wt_prmts, pam, method = "silhouette")+ theme_classic()
fviz_nbclust(wt_prmts, kmeans, method = "silhouette")+ theme_classic()
#plot correlation
cor_sp_plot = cor(wt_prmts, method = c("spearman"))
corrplot(cor_sp_plot)
#Principal conponents analysis
res.pca <- prcomp(wt_prmts, scale = T, center = T)
fviz_eig(res.pca,main = "Screeplot of the 10 PCs",
addlabels = TRUE,
ylim = c(0, 40))
fviz_eig(res.pca,main = "Screeplot of the 10 PCs",
addlabels = TRUE,
ylim = c(0, 40))
fviz_eig(res.pca,main = "",
addlabels = TRUE,
ylim = c(0, 40))
fviz_eig(res.pca,main = "",
addlabels = TRUE,
ylim = c(0, 50))
fviz_eig(res.pca,main = "Screeplot of the 10 PCs",
addlabels = TRUE,
ylim = c(0, 50))
fviz_eig(res.pca,main = "Screeplot of the 10 PCs",
addlabels = TRUE,
ylim = c(0, 45))
fviz_eig(res.pca,main = "Screeplot of the 5 PCs",
addlabels = TRUE,
ylim = c(0, 45))
eigs <- res.pca$sdev^2
eigs
summary(res.pca)
pca.loadings <- res.pca$rotation
pca.loadings
fviz_pca_var(res.pca,
col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE )+
labs(title ="     Variables Factor Map (PCA)", x = "PC1 (36.81%)", y = "PC2 (18.78%)")
fviz_pca_ind(res.pca,
col.ind = "cos2",
pointshape = 21, fill = "#E7B800",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE  ) +
labs(title ="                                   Individuals Factor Map (PCA)", x = "PC1 (36.81%)", y = "PC2 (18.78%)") +
xlim(-5, 5) + ylim (-4, 4)
library(extrafont)
library(ggplot2)
library(pastecs)
library(corrplot)
library(ppcor)
library(factoextra)
library(psych)
library(GPArotation)
library(Hmisc)
library(dplyr)
library(ape)
library(plotly)
download.file("http://simonsoftware.se/other/xkcd.ttf",
dest="xkcd.ttf", mode="wb")
system("mkdir ~/.fonts")
system("cp xkcd.ttf  ~/.fonts")
font_import(paths = "~/.fonts", pattern="[X/x]kcd")
loadfonts()
#loding main data
wt <- read.table("F:\\ResearchProject\\Water Quality\\DataNanalysis\\mgpl.csv",sep=',',header=T)
str(wt)
#loding main data
wt <- read.table("F:\\ResearchProject\\Water Quality\\DataNanalysis\\mgpl.csv",sep=',',header=T)
#######Barriers to green supply chain management: An emerging economy context#######
#                            Mohammad Nayeem Hasan                                 #
####################################################################################
library(extrafont)
library(ggplot2)
library(pastecs)
library(corrplot)
library(ppcor)
library(factoextra)
library(psych)
library(GPArotation)
library(Hmisc)
library(dplyr)
library(ape)
#loding main data
dat <- read.table("F:\\ResearchProject\\Client Task\\SBhai\\Table3.csv",sep=',',header=T)
str(dat)
#descriptive statistics
stat.desc(dat)
#cluster Analysis
dat
fviz_nbclust(dat, kmeans, method = "silhouette")+ theme_classic()+
labs(title ="", x = "Number of clusters", y = "Silhouette values")
row.names(dat) <- c("B1","B2","B3","B4","B5","B6","B7","B8","B9","B10",
"B11","B12","B13","B14","B15")
dat
datsc <- scale(dat)
# Compute dissimilarity matrix
res.dist <- dist(datsc, method = "euclidean")
# Enhanced hierarchical clustering
res.hc <- eclust(datsc, "hclust" , k=3) # compute hclust
fviz_dend(res.hc, cex = 1,
main = "",
xlab = "Barriers", ylab = "Height", sub = "",rect = TRUE)
# Enhanced hierarchical clustering
res.hc <- eclust(datsc, "hclust") # compute hclust
fviz_dend(res.hc, cex = 1,
main = "",
xlab = "Barriers", ylab = "Height", sub = "",rect = TRUE)
# Compute dissimilarity matrix
res.dist <- dist(datsc, method = "euclidean")
# Enhanced hierarchical clustering
res.hc <- eclust(datsc, "hclust" , k=3) # compute hclust
fviz_dend(res.hc, cex = 1,
main = "",
xlab = "Barriers", ylab = "Height", sub = "",rect = TRUE)
#scatter plot
library("car")
ZXRIV <- c(1.570, 1.254, -0.485, 0.305, 1.886, -1.907, 0.147, 1.412, -2.223,
-1.591, -0.011, -0.169, 0.305, 0.621, -1.117)
ZXSDV <- c(0.750, 1.943, -1.092, 0.161, 1.784, -1.524, -0.008, 0.409, -0.874,
-1.544, -1.253, -0.225, 0.447, 2.006, -0.979)
